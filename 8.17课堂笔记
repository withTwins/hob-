8.17
逻辑运算符

1. && 逻辑与
两个条件都为真，则结果为真
if((a>b)&&(a<c))
C语言没有if(b<a<c)这种表达方式，只能通过

2.|| 逻辑或
两个条件至少有一个为真，则结果为真。
 int main()
{
    int a = 10;
    int b = 20;
    int c = 30;
 if((a<b)||(b>c))
    {
        printf("true");
    }
    return 0;	
}

3。！ 逻辑非
    if (!(a>b))
    {
        printf("false");
    } // 可以打印出来false  --- 负负则能打印结果，正负则无结果
	
位运算符
十进制转二进制：
方法 十进制数除以2，余数为权位上的数，得到商继续除以2，直到商为0终止，然后反向取余数
例：123转二进制 
123/2 = 61...1
61/2 = 30...1
30/2 = 15...0
15/2 = 7...1
7/2 = 3...1
3/2 = 1...1
1/2 = 0...1 
则123的二进制为 01111011 从下往上

正数的 原码 = 反码 = 补码

原码：将一个整数，转化成二进制，就是其原码。
如单字节的5的原码为：0000 0101； -5的原码则为：1000 0101； 负原码就是将他正原码第一位的0改为1.

反码：正数的反码就是其原码；负数的反码就是将源码中，除符号以外，每一位取反
如 ：5的反码： 0000 0101  -5  的反码： 1111 1010；

补码：正数的补码就是其原码； 负数的补码 就是负数的反码+1；
如： 5的补码：1111 0101  -5的补码 ：1111 1011；

1. & 按位与
-5 & 10

-5的二进制

1111 1111 1111 1111 1111 1111 1111 1011

10的二进制

0000 0000 0000 0000 0000 0000 0000 1010
 ---------------------------------------
 -5 & 10
1111 1111 1111 1111 1111 1111 1111 1011
0000 0000 0000 0000 0000 0000 0000 1010
----------------------------------------
0000 0000 0000 0000 0000 0000 0000 1010 // 上下对应的数当都是 1时，则打印1，有一个0时则打印0.

2.| 按位或
-5 | 10
1111 1111 1111 1111 1111 1111 1111 1011
0000 0000 0000 0000 0000 0000 0000 1010
----------------------------------------
1111 1111 1111 1111 1111 1111 1111 1011  // 上下对应的两个数只要有一个1结果就是1，只有两个0才是0.

3. ~ 按位取反	
1变0， 0变1
0101 1101
-------------------------------------------
1010 0010

4.^ 按位异位
相异得1 ，相同得0
1001 1100 
0101 1010
--------------------------------------------
1100 0110

5.位移
>> 右移
<< 左移
注意：右移分：逻辑右移、算术右移
（1） 右移
1).逻辑右移 高位补0，低位溢出
0101 1010 >>3
-----------------------------------------
0001 0110
2). 算术右移
	对有符号数来说
低位溢出，高位补符号位 ----->并且在左边补上符号位，也就是如果符号位是1就补1符号位是0就补0
1010 1101 >>3
------------------------------------
1111 0101 

	对无符号数来说
高位补0，低位溢出。

<< 左移 高位溢出，低位补0
　算​术左移和逻辑左移一样都是右边补0：
比如 00101011​
算术左移一位:01010110
逻辑左移一位​:01010110
　　对于二进制的数值来说左移n位等于原来的数值乘以2的n次方
　　比如00011010十进制是26，左移两位后是011010​00转成十进制是104恰好是26的4倍。
 5<<1
 0000 0101
 -----------------------
 0010 1000 
